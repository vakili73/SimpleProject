-- MySQL Script generated by MySQL Workbench
-- Wed Dec  6 10:47:48 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema saman
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `saman` ;

-- -----------------------------------------------------
-- Schema saman
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `saman` DEFAULT CHARACTER SET utf8 ;
USE `saman` ;

-- -----------------------------------------------------
-- Table `saman`.`password_resets`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`password_resets` (
  `email` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NOT NULL,
  `token` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NOT NULL,
  `created_at` DATETIME NOT NULL)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;

CREATE INDEX `password_resets_email_index` ON `saman`.`password_resets` (`email` ASC);

CREATE INDEX `password_resets_token_index` ON `saman`.`password_resets` (`token` ASC);


-- -----------------------------------------------------
-- Table `saman`.`homes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`homes` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `saman`.`homes` (`name` ASC);


-- -----------------------------------------------------
-- Table `saman`.`groups`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`groups` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `home_id` INT UNSIGNED NOT NULL,
  `grant` VARCHAR(20) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_groups_homes1`
    FOREIGN KEY (`home_id`)
    REFERENCES `saman`.`homes` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `saman`.`groups` (`name` ASC);

CREATE INDEX `fk_groups_homes1_idx` ON `saman`.`groups` (`home_id` ASC);

CREATE UNIQUE INDEX `grant_UNIQUE` ON `saman`.`groups` (`grant` ASC);


-- -----------------------------------------------------
-- Table `saman`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`users` (
  `id` INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
  `group_id` INT UNSIGNED NOT NULL,
  `username` VARCHAR(45) NOT NULL,
  `name` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NOT NULL,
  `family` VARCHAR(45) NOT NULL,
  `grant` VARCHAR(20) NOT NULL,
  `state` TINYINT(1) NOT NULL DEFAULT 1,
  `email` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NULL,
  `password` VARCHAR(255) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NOT NULL,
  `position` VARCHAR(45) NOT NULL,
  `remember_token` VARCHAR(100) CHARACTER SET 'utf8' COLLATE 'utf8_unicode_ci' NULL DEFAULT NULL,
  `created_at` DATETIME NULL,
  `updated_at` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_users_groups1`
    FOREIGN KEY (`group_id`)
    REFERENCES `saman`.`groups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8
COLLATE = utf8_unicode_ci;

CREATE UNIQUE INDEX `user_UNIQUE` ON `saman`.`users` (`username` ASC);

CREATE INDEX `fk_users_groups1_idx` ON `saman`.`users` (`group_id` ASC);

CREATE UNIQUE INDEX `grant_UNIQUE` ON `saman`.`users` (`grant` ASC);


-- -----------------------------------------------------
-- Table `saman`.`menus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`menus` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `alias` VARCHAR(45) NOT NULL,
  `icon` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `saman`.`menus` (`name` ASC);

CREATE UNIQUE INDEX `alias_UNIQUE` ON `saman`.`menus` (`alias` ASC);


-- -----------------------------------------------------
-- Table `saman`.`permissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`permissions` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `group_id` INT UNSIGNED NOT NULL,
  `menu_id` INT UNSIGNED NOT NULL,
  `grant` VARCHAR(45) NOT NULL,
  `create` TINYINT(1) NOT NULL DEFAULT 0,
  `read` TINYINT(1) NOT NULL DEFAULT 0,
  `delete` TINYINT(1) NOT NULL DEFAULT 0,
  `update` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`, `group_id`),
  CONSTRAINT `fk_permissions_menus1`
    FOREIGN KEY (`menu_id`)
    REFERENCES `saman`.`menus` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_permissions_groups1`
    FOREIGN KEY (`group_id`)
    REFERENCES `saman`.`groups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_permissions_menus1_idx` ON `saman`.`permissions` (`menu_id` ASC);

CREATE INDEX `fk_permissions_groups1_idx` ON `saman`.`permissions` (`group_id` ASC);


-- -----------------------------------------------------
-- Table `saman`.`companies`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`companies` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `state` TINYINT(1) NOT NULL DEFAULT 1,
  `description` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `name_UNIQUE` ON `saman`.`companies` (`name` ASC);


-- -----------------------------------------------------
-- Table `saman`.`trucks`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`trucks` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `companie_id` INT UNSIGNED NOT NULL,
  `capacity` INT UNSIGNED NOT NULL,
  `left_tag` VARCHAR(45) NOT NULL,
  `right_tag` VARCHAR(45) NOT NULL,
  `number` INT NOT NULL,
  `state` TINYINT(1) NOT NULL DEFAULT 1,
  `description` VARCHAR(500) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_trucks_companies1`
    FOREIGN KEY (`companie_id`)
    REFERENCES `saman`.`companies` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE UNIQUE INDEX `num_UNIQUE` ON `saman`.`trucks` (`number` ASC);

CREATE UNIQUE INDEX `right_tag_UNIQUE` ON `saman`.`trucks` (`right_tag` ASC);

CREATE UNIQUE INDEX `left_tag_UNIQUE` ON `saman`.`trucks` (`left_tag` ASC);

CREATE INDEX `fk_trucks_companies1_idx` ON `saman`.`trucks` (`companie_id` ASC);


-- -----------------------------------------------------
-- Table `saman`.`details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`details` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `stair` INT NOT NULL,
  `blast` INT NOT NULL,
  `caret` FLOAT NULL,
  `RQD` FLOAT NULL,
  `SHH` FLOAT NULL,
  `PL` FLOAT NULL,
  `distance` DECIMAL(20,12) NULL,
  `longitude` DECIMAL(20,12) NULL,
  `latitude` DECIMAL(20,12) NULL,
  `user` VARCHAR(25) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;

CREATE INDEX `SORT` ON `saman`.`details` (`stair` ASC, `blast` ASC);


-- -----------------------------------------------------
-- Table `saman`.`meta_details`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`meta_details` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `detail_id` INT UNSIGNED NOT NULL,
  `datetime` DATETIME NOT NULL,
  `json` MEDIUMTEXT NULL,
  `user` VARCHAR(25) NULL,
  PRIMARY KEY (`id`, `detail_id`),
  CONSTRAINT `fk_meta_details_details1`
    FOREIGN KEY (`detail_id`)
    REFERENCES `saman`.`details` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_meta_details_details1_idx` ON `saman`.`meta_details` (`detail_id` ASC);


-- -----------------------------------------------------
-- Table `saman`.`logs`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`logs` (
  `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
  `datetime` DATETIME NOT NULL,
  `truck_id` INT UNSIGNED NULL,
  `meta_detail_id` INT UNSIGNED NULL,
  `is_auto` TINYINT(1) NOT NULL DEFAULT 1,
  `is_evacuated` TINYINT(1) NOT NULL DEFAULT 1,
  `geocoding` VARCHAR(5) NOT NULL,
  `json` MEDIUMTEXT NULL,
  `user` VARCHAR(25) NULL,
  PRIMARY KEY (`id`, `datetime`),
  CONSTRAINT `fk_logs_trucks1`
    FOREIGN KEY (`truck_id`)
    REFERENCES `saman`.`trucks` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_logs_meta_details1`
    FOREIGN KEY (`meta_detail_id`)
    REFERENCES `saman`.`meta_details` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_logs_trucks1_idx` ON `saman`.`logs` (`truck_id` ASC);

CREATE INDEX `fk_logs_meta_details1_idx` ON `saman`.`logs` (`meta_detail_id` ASC);


-- -----------------------------------------------------
-- Table `saman`.`descriptions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`descriptions` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `description` VARCHAR(500) NOT NULL,
  `log_id` BIGINT UNSIGNED NOT NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_descriptions_logs1`
    FOREIGN KEY (`log_id`)
    REFERENCES `saman`.`logs` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_descriptions_logs1_idx` ON `saman`.`descriptions` (`log_id` ASC);


-- -----------------------------------------------------
-- Table `saman`.`groups_has_menus`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`groups_has_menus` (
  `group_id` INT UNSIGNED NOT NULL,
  `menu_id` INT UNSIGNED NOT NULL,
  `order` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`order`, `group_id`, `menu_id`),
  CONSTRAINT `fk_groups_has_menus_groups1`
    FOREIGN KEY (`group_id`)
    REFERENCES `saman`.`groups` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_groups_has_menus_menus1`
    FOREIGN KEY (`menu_id`)
    REFERENCES `saman`.`menus` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_groups_has_menus_menus1_idx` ON `saman`.`groups_has_menus` (`menu_id` ASC);

CREATE INDEX `fk_groups_has_menus_groups1_idx` ON `saman`.`groups_has_menus` (`group_id` ASC);


-- -----------------------------------------------------
-- Table `saman`.`logins`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`logins` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `datetime` DATETIME NOT NULL,
  `username` DATETIME NOT NULL,
  `section` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saman`.`flags`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`flags` (
  `flag` TINYINT(1) NULL)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `saman`.`lastmissions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `saman`.`lastmissions` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `detail_id` INT UNSIGNED NOT NULL,
  `dateTime` DATETIME NULL,
  `json` MEDIUMTEXT NULL,
  `user` VARCHAR(25) NULL,
  PRIMARY KEY (`id`),
  CONSTRAINT `fk_lastmission_details1`
    FOREIGN KEY (`detail_id`)
    REFERENCES `saman`.`details` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_lastmission_details1_idx` ON `saman`.`lastmissions` (`detail_id` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
